variables:
  node_version: 10.x
  code_coverge_threshold: '60'

pool:
  vmImage: 'ubuntu-16.04'

steps:
  - task: NodeTool@0
    inputs:
      versionSpec: $(node_version)

  #Cache node_modules
  - task: Cache@2
    inputs:
      key: 'npm | “$(Agent.OS)” | $(Build.SourcesDirectory)/server/package-lock.json'
      path: '$(Build.SourcesDirectory)/server/node_modules'
      cacheHitVar: 'CacheRestored'

  # Install dev dependencies
  - script: npm install
    workingDirectory: $(System.DefaultWorkingDirectory)/server
    displayName: 'Install dependencies'
    condition: ne(variables['CacheRestored'], 'true')


  # Execute unit tests
  - script: set MONGO_URL_TESTS=$MONGO_URL_TESTS&& npm run-script test:ci
    workingDirectory: $(System.DefaultWorkingDirectory)/server
    displayName: 'Execute tests'
    continueOnError: true
    env:
      MONGO_URL_TESTS: $(SECRET_MONGO_URL_TESTS) 

  # Publish unit test results
  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: '**/junit.xml'
      mergeTestResults: true
      testRunTitle: 'Jest Tests'
      failTaskOnFailedTests: true
    displayName: 'Publish tests report'

  - task: ArchiveFiles@1
    displayName: 'Archive files '
    inputs:
      rootFolder: '$(System.DefaultWorkingDirectory)'
      includeRootFolder: false

  - task: CopyFiles@2
    displayName: 'Copy File to: $(TargetFolder)'
    inputs:
      SourceFolder: '$(Build.ArtifactStagingDirectory)'
      Contents: '$(Build.BuildId).zip'
      TargetFolder: '$(Build.ArtifactStagingDirectory)\ArtifactsToBePublished'

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: drop'
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)\ArtifactsToBePublished'
